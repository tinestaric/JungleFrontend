var gdjs;(function(s){const r=class extends s.RuntimeObject{constructor(e,t){super(e,t);this._opacity=255;this._tileMap=null;this._displayMode="all";this._layerIndex=0;this._isTileMapDirty=!1;this._sceneToTileMapTransformation=new s.AffineTransformation;this._tileMapToSceneTransformation=new s.AffineTransformation;this._collisionTileMap=null;this._hitBoxTag="collision";this._transformationIsUpToDate=!1;this._atlasImage=t.content.atlasImage,this._rowCount=t.content.rowCount,this._columnCount=t.content.columnCount,this._tileSize=t.content.tileSize,this._initialTileMapAsJsObject={tileWidth:this._tileSize,tileHeight:this._tileSize,dimX:1,dimY:1,layers:[{id:0,alpha:this._opacity/255,tiles:[]}]},this._initialTilesWithHitBox=t.content.tilesWithHitBox.split(",").filter(i=>!!i).map(i=>parseInt(i,10)),this._tileMapManager=s.TileMap.TileMapRuntimeManager.getManager(e),this._renderer=new s.TileMapRuntimeObjectRenderer(this,e),this._loadTileMap(this._initialTileMapAsJsObject,i=>{this._renderer.updatePosition(),this._collisionTileMap=new s.TileMap.TransformedCollisionTileMap(i,this._hitBoxTag),this.updateTransformation()}),this.onCreated()}getRendererObject(){return this._renderer.getRendererObject()}updateTileMap(){let e=!0;this._tileMapManager.getOrLoadSimpleTileMapTextureCache(t=>this.getInstanceContainer().getGame().getImageManager().getPIXITexture(t),this._atlasImage,this._tileSize,this._columnCount,this._rowCount,t=>{!t||this._renderer.refreshPixiTileMap(t)},t=>{e=!1,console.error(`Could not load texture cache for atlas ${this._atlasImage} during prerender. The tilemap might be badly configured or an issues happened with the loaded atlas image:`,t)}),!!e&&this._collisionTileMap&&this._tileMap&&this._collisionTileMap.updateFromTileMap(this._tileMap)}updatePreRender(e){this._isTileMapDirty&&(this.updateTileMap(),this._isTileMapDirty=!1)}updateFromObjectData(e,t){return e.content.atlasImage===t.content.atlasImage}getNetworkSyncData(e){const t={...super.getNetworkSyncData(e),op:this._opacity};if(this._tileMap&&e.syncFullTileMaps){const i=this._tileMap.toJSObject();t.tm=i}return t}updateFromNetworkSyncData(e,t){super.updateFromNetworkSyncData(e,t),e.tm!==void 0&&this._loadTileMap(e.tm,i=>{e.w!==void 0&&this.setWidth(e.w),e.h!==void 0&&this.setHeight(e.h),e.op!==void 0&&this.setOpacity(e.op),this._renderer.updatePosition(),this._collisionTileMap?this._collisionTileMap.updateFromTileMap(i):this._collisionTileMap=new s.TileMap.TransformedCollisionTileMap(i,this._hitBoxTag),this.updateTransformation()})}extraInitializationFromInitialInstance(e){for(const t of e.stringProperties)t.name==="tilemap"&&(this._initialTileMapAsJsObject=JSON.parse(t.value));this._loadTileMap(this._initialTileMapAsJsObject,t=>{e.customSize&&(this.setWidth(e.width),this.setHeight(e.height)),e.opacity!==void 0&&this.setOpacity(e.opacity),this._renderer.updatePosition(),this._collisionTileMap?this._collisionTileMap.updateFromTileMap(t):this._collisionTileMap=new s.TileMap.TransformedCollisionTileMap(t,this._hitBoxTag),this.updateTransformation()})}_loadTileMap(e,t){if(this._columnCount<=0||this._rowCount<=0){console.error(`Tilemap object ${this.name} is not configured properly.`);return}this._tileMapManager.getOrLoadSimpleTileMap(e,this.name,this._tileSize,this._columnCount,this._rowCount,i=>{this._initialTilesWithHitBox.forEach(n=>{const a=i.getTileDefinition(n);if(!a){console.warn(`Could not set hit box for tile with id ${n}. Continuing.`);return}a.addHitBox(this._hitBoxTag,[[0,0],[0,i.getTileHeight()],[i.getTileWidth(),i.getTileHeight()],[i.getTileWidth(),0]],!0)}),this._tileMapManager.getOrLoadSimpleTileMapTextureCache(n=>this.getInstanceContainer().getGame().getImageManager().getPIXITexture(n),this._atlasImage,this._tileSize,this._columnCount,this._rowCount,n=>{!n||(this._tileMap=i,this._renderer.refreshPixiTileMap(n),t(i))},n=>{console.error(`Could not load texture cache for atlas ${this._atlasImage} during initial loading. The tilemap might be badly configured or an issues happened with the loaded atlas image:`,n)})})}onDestroyed(){super.onDestroyed(),this._renderer.destroy()}setWidth(e){this.getWidth()!==e&&(this._transformationIsUpToDate=!1,this._renderer.setWidth(e),this.invalidateHitboxes())}setHeight(e){this.getHeight()!==e&&(this._transformationIsUpToDate=!1,this._renderer.setHeight(e),this.invalidateHitboxes())}setSize(e,t){this.setWidth(e),this.setHeight(t),this._transformationIsUpToDate=!1}getScale(){const e=this.getScaleX(),t=this.getScaleY();return e===t?e:Math.sqrt(e*t)}setScale(e){this.setScaleX(e),this.setScaleY(e),this._transformationIsUpToDate=!1}setScaleX(e){e<0&&(e=0),this.getScaleX()!==e&&(this._renderer.setScaleX(e),this.invalidateHitboxes(),this._transformationIsUpToDate=!1)}setScaleY(e){e<0&&(e=0),this.getScaleY()!==e&&(this._renderer.setScaleY(e),this.invalidateHitboxes(),this._transformationIsUpToDate=!1)}setX(e){super.setX(e),this._renderer.updatePosition(),this._transformationIsUpToDate=!1}setY(e){super.setY(e),this._renderer.updatePosition(),this._transformationIsUpToDate=!1}setAngle(e){super.setAngle(e),this._renderer.updateAngle(),this._transformationIsUpToDate=!1}setOpacity(e){this._opacity=e,this._renderer.updateOpacity(),this._isTileMapDirty=!0}getOpacity(){return this._opacity}getWidth(){return this._renderer.getWidth()}getHeight(){return this._renderer.getHeight()}getScaleX(){return this._renderer.getScaleX()}getScaleY(){return this._renderer.getScaleY()}getHitBoxes(){return this.hitBoxesDirty&&(this.updateHitBoxes(),this.updateAABB(),this.hitBoxesDirty=!1),this.hitBoxes}updateHitBoxes(){this.updateTransformation(),!!this._collisionTileMap&&(this.hitBoxes=Array.from(this._collisionTileMap.getAllHitboxes(this._hitBoxTag)),this.hitBoxesDirty=!1,this.updateAABB())}updateAABB(){if(this.getAngle()===0)this.aabb.min[0]=this.x,this.aabb.min[1]=this.y,this.aabb.max[0]=this.aabb.min[0]+this.getWidth(),this.aabb.max[1]=this.aabb.min[1]+this.getHeight();else{if(!this._collisionTileMap)return;const e=this._collisionTileMap.getTransformation(),t=0,i=this._collisionTileMap.getWidth(),n=0,a=this._collisionTileMap.getHeight(),o=this.aabb.min;o[0]=t,o[1]=n,e.transform(o,o);const l=o[0],h=o[1];o[0]=i,o[1]=n,e.transform(o,o);const p=o[0],T=o[1];o[0]=i,o[1]=a,e.transform(o,o);const g=o[0],f=o[1];o[0]=t,o[1]=a,e.transform(o,o);const u=o[0],c=o[1];this.aabb.min[0]=Math.min(l,p,g,u),this.aabb.max[0]=Math.max(l,p,g,u),this.aabb.min[1]=Math.min(h,T,f,c),this.aabb.max[1]=Math.max(h,T,f,c)}}getHitBoxesAround(e,t,i,n){return this.updateTransformation(),this._collisionTileMap?this._collisionTileMap.getHitboxesAround(this._hitBoxTag,e,t,i,n):[]}updateTransformation(){if(this._transformationIsUpToDate)return;const e=Math.abs(this._renderer.getScaleX()),t=Math.abs(this._renderer.getScaleY());this._tileMapToSceneTransformation.setToIdentity(),this._tileMapToSceneTransformation.translate(this.getX(),this.getY());const i=this.getAngle()*Math.PI/180;if(this._tileMapToSceneTransformation.rotateAround(i,this.getCenterX(),this.getCenterY()),this._tileMapToSceneTransformation.scale(e,t),this._collisionTileMap){const n=this._collisionTileMap.getTransformation();n.copyFrom(this._tileMapToSceneTransformation),this._collisionTileMap.setTransformation(n)}this._sceneToTileMapTransformation.copyFrom(this._tileMapToSceneTransformation),this._sceneToTileMapTransformation.invert(),this._transformationIsUpToDate=!0}getSceneXCoordinateOfTileCenter(e,t){const i=r.workingPoint;return this._tileMapToSceneTransformation.transform([(e+.5)*this._tileSize,(t+.5)*this._tileSize],i),i[0]}getSceneYCoordinateOfTileCenter(e,t){const i=r.workingPoint;return this._tileMapToSceneTransformation.transform([(e+.5)*this._tileSize,(t+.5)*this._tileSize],i),i[1]}getGridCoordinatesFromSceneCoordinates(e,t){this.updateTransformation();const i=r.workingPoint;this._sceneToTileMapTransformation.transform([e,t],i);const n=Math.floor(i[0]/this._tileSize),a=Math.floor(i[1]/this._tileSize);return[n,a]}getColumnIndexAtPosition(e,t){return this.getGridCoordinatesFromSceneCoordinates(e,t)[0]}getRowIndexAtPosition(e,t){return this.getGridCoordinatesFromSceneCoordinates(e,t)[1]}getTileAtPosition(e,t){const[i,n]=this.getGridCoordinatesFromSceneCoordinates(e,t);return this.getTileAtGridCoordinates(i,n)}getTileAtGridCoordinates(e,t){return this.getTileId(e,t,0)}setTileAtPosition(e,t,i){const[n,a]=this.getGridCoordinatesFromSceneCoordinates(t,i);this.setTileAtGridCoordinates(e,n,a)}setTileAtGridCoordinates(e,t,i){if(!this._tileMap)return;const n=this._tileMap.getTileLayer(this._layerIndex);if(!n)return;const a=n.getTileId(t,i);if(e!==a){if(n.setTile(t,i,e),this._collisionTileMap){const o=a!==void 0&&this._tileMap.getTileDefinition(a),l=this._tileMap.getTileDefinition(e),h=!!o&&o.hasFullHitBox(this._hitBoxTag),p=!!l&&l.hasFullHitBox(this._hitBoxTag);h!==p&&this._collisionTileMap.invalidateTile(this._layerIndex,t,i)}this._isTileMapDirty=!0,this.invalidateHitboxes()}}flipTileOnYAtPosition(e,t,i){const[n,a]=this.getGridCoordinatesFromSceneCoordinates(e,t);this.flipTileOnYAtGridCoordinates(n,a,i)}flipTileOnXAtPosition(e,t,i){const[n,a]=this.getGridCoordinatesFromSceneCoordinates(e,t);this.flipTileOnXAtGridCoordinates(n,a,i)}flipTileOnYAtGridCoordinates(e,t,i){this.flipTileOnY(e,t,0,i),this._isTileMapDirty=!0}flipTileOnXAtGridCoordinates(e,t,i){this.flipTileOnX(e,t,0,i),this._isTileMapDirty=!0}isTileFlippedOnXAtPosition(e,t){const[i,n]=this.getGridCoordinatesFromSceneCoordinates(e,t);return this.isTileFlippedOnX(i,n,0)}isTileFlippedOnXAtGridCoordinates(e,t){return this.isTileFlippedOnX(e,t,0)}isTileFlippedOnYAtPosition(e,t){const[i,n]=this.getGridCoordinatesFromSceneCoordinates(e,t);return this.isTileFlippedOnY(i,n,0)}isTileFlippedOnYAtGridCoordinates(e,t){return this.isTileFlippedOnY(e,t,0)}removeTileAtPosition(e,t){const[i,n]=this.getGridCoordinatesFromSceneCoordinates(e,t);this.removeTileAtGridCoordinates(i,n)}removeTileAtGridCoordinates(e,t){if(!this._tileMap)return;const i=this._tileMap.getTileLayer(this._layerIndex);!i||i.getTileId(e,t)===void 0||(i.removeTile(e,t),this._collisionTileMap&&this._collisionTileMap.invalidateTile(this._layerIndex,e,t),this._isTileMapDirty=!0,this.invalidateHitboxes())}setGridRowCount(e){e<=0||!this._tileMap||(this._tileMap.setDimensionY(e),this._isTileMapDirty=!0,this.invalidateHitboxes())}setGridColumnCount(e){e<=0||!this._tileMap||(this._tileMap.setDimensionX(e),this._isTileMapDirty=!0,this.invalidateHitboxes())}getGridRowCount(){return this._tileMap?this._tileMap.getDimensionY():0}getGridColumnCount(){return this._tileMap?this._tileMap.getDimensionX():0}getTilesetColumnCount(){return this._columnCount}getTilesetRowCount(){return this._rowCount}getTileMap(){return this._tileMap}getTileMapWidth(){const e=this._tileMap;return e?e.getWidth():20}getTileMapHeight(){const e=this._tileMap;return e?e.getHeight():20}getTileId(e,t,i){return this._tileMap?this._tileMap.getTileId(e,t,i):-1}flipTileOnY(e,t,i,n){!this._tileMap||this._tileMap.flipTileOnY(e,t,i,n)}flipTileOnX(e,t,i,n){!this._tileMap||this._tileMap.flipTileOnX(e,t,i,n)}isTileFlippedOnX(e,t,i){return this._tileMap?this._tileMap.isTileFlippedOnX(e,t,i):!1}isTileFlippedOnY(e,t,i){return this._tileMap?this._tileMap.isTileFlippedOnY(e,t,i):!1}};let d=r;d.workingPoint=[0,0],s.SimpleTileMapRuntimeObject=d,s.registerObject("TileMap::SimpleTileMap",s.SimpleTileMapRuntimeObject)})(gdjs||(gdjs={}));
//# sourceMappingURL=simpletilemapruntimeobject.js.map
